[project]
name = "nadle_backend"
version = "0.1.0"
description = "FastAPI backend for content management system"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "nadle"}
]
license = {text = "MIT"}
keywords = ["fastapi", "backend", "api", "content-management", "mongodb"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks"
]
dependencies = [
    "fastapi[standard]>=0.115.12",
    "uvicorn>=0.34.3",
    "motor>=3.6.0",
    "beanie>=1.27.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "pydantic-settings>=2.8.0",
    "python-multipart>=0.0.20",
    "certifi>=2025.4.26",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "markdown>=3.8.2",
    "bleach>=6.2.0",
    "beautifulsoup4>=4.13.4",
    "pillow>=11.2.1",
    "playwright>=1.53.0",
    "aiohttp>=3.12.13",
    "requests>=2.32.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
    "httpx>=0.28.1",
    "black>=25.1.0",
    "flake8>=7.2.0",
    "pillow>=10.0.0",
    "pytest-mock>=3.11.1",
]



[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["nadle_backend"]
exclude = [
    "nadle_backend/**/__pycache__",
    "nadle_backend/**/*.pyc",
    "nadle_backend/**/*.pyo",
    "tests/",
    "htmlcov/",
    "uploads/",
    "*.log",
    ".env*",
    "*.md",
    "Makefile",
    "start_server.sh"
]

[tool.hatch.build.targets.sdist]
include = [
    "nadle_backend/",
    "pyproject.toml",
    "README.md",
    ".env.example"
]

[project.scripts]
nadle-backend = "nadle_backend.cli:main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["nadle_backend"]
omit = ["tests/*", "nadle_backend/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", ".venv", "build", "dist"]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "flake8>=7.2.0",
    "httpx>=0.28.1",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
]
